{"version":3,"sources":["component/Weather Forecast/weathercard.js","component/Weather Forecast/temp.js","App.js","index.js"],"names":["Weathercard","temp","humidity","pressure","weathermood","name","speed","country","sunset","React","useState","Weatherstate","setWeatherstate","useEffect","date","Date","timestr","getHours","getMinutes","className","toLocaleString","Temp","SearchValue","setSearchValue","Tempinfo","setTempinfo","getWeatherInfo","a","url","fetch","res","json","data","main","weather","wind","sys","console","log","type","placeholder","autoFocus","id","value","onChange","e","target","onClick","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1b919651.chunk.js","sourcesContent":["import React, { useEffect } from 'react'\r\n\r\nconst Weathercard = ({\r\n    temp,\r\n    humidity,\r\n    pressure,\r\n    weathermood,\r\n    name,\r\n    speed,\r\n    country,\r\n    sunset,\r\n}) => {\r\n    const [Weatherstate, setWeatherstate] = React.useState(\"\")\r\n    \r\n    useEffect(() => {\r\n        if (weathermood) {\r\n            switch (weathermood) {\r\n                case \"Clouds\":\r\n                    setWeatherstate(\"wi-day-cloudy\")\r\n\r\n                    break;\r\n                case \"Haze\":\r\n                    setWeatherstate(\"wi-fog\")\r\n\r\n                    break;\r\n                case \"Clear\":\r\n                    setWeatherstate(\"wi-day-Sunny\")\r\n                    break;\r\n                case \"Mist\":\r\n                    setWeatherstate(\"wi-dust\")\r\n                    break;\r\n                case \"Thunderstorm\":\r\n                    setWeatherstate(\"wi-thunderstorm\")\r\n                    break;\r\n                case \"Fog\":\r\n                    setWeatherstate(\"wi-fog\")\r\n                    break;\r\n\r\n\r\n\r\n\r\n\r\n                default:\r\n                    setWeatherstate(\"wi-day-Sunny\")\r\n                    break;\r\n            }\r\n        }\r\n\r\n    }, [weathermood]);\r\n\r\n\r\n\r\n\r\n\r\n    // converting sunset seconds into time\r\n    let sec = sunset;\r\n    let date = new Date(sec * 1000)\r\n    let timestr = `${date.getHours()}:${date.getMinutes()}`\r\n    return (\r\n        <>\r\n\r\n\r\n            <article className=\"widget\">\r\n                <div className=\"weatherIcon\">\r\n                    <i className={`wi ${Weatherstate}`}></i>\r\n                </div>\r\n\r\n                <div className=\"weatherInfo\">\r\n                    <div className=\"temperature\">\r\n                        <span>{temp}&deg;</span>\r\n                    </div>\r\n                    <div className=\"description\">\r\n                        <div className=\"weatherCondition\">{weathermood}</div>\r\n                        <div className=\"place\">{name} {country}</div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"date\">{new Date().toLocaleString()}</div>\r\n\r\n                {/* our 4 colums section  */}\r\n\r\n                <div className=\"extra-temp\">\r\n                    <div className=\"temp-info-minmax\">\r\n                        <div className=\"two-sided-section\">\r\n                            <p>\r\n                                <i className={\"wi wi-sunset\"}></i>\r\n                            </p>\r\n                            <p className=\"extra-info-leftside\">\r\n                                {timestr}PM <br />\r\n                                Sunset\r\n\r\n                            </p>\r\n                        </div>\r\n                        <div className=\"two-sided-section\">\r\n                            <p>\r\n                                <i className={\"wi wi-humidity\"}></i>\r\n                            </p>\r\n                            <p className=\"extra-info-leftside\">\r\n                                {humidity}<br />\r\n                                Humidity\r\n                            </p>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                    <div className=\"weather-extra-info\">\r\n                        <div className=\"two-sided-section\">\r\n                            <p>\r\n                                <i className={\"wi wi-rain\"}></i>\r\n                            </p>\r\n                            <p className=\"extra-info-leftside\">\r\n                                {pressure}<br />\r\n                                Pressure\r\n                            </p>\r\n                        </div>\r\n                        <div className=\"two-sided-section\">\r\n                            <p>\r\n                                <i className={\"wi wi-strong-wind\"}></i>\r\n                            </p>\r\n                            <p className=\"extra-info-leftside\">\r\n                                {speed}<br />\r\n                                Speed\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n\r\n                </div>\r\n\r\n\r\n            </article>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Weathercard\r\n","import React, { useEffect } from 'react'\r\n\r\nimport \"./style.css\"\r\nimport Weathercard from './weathercard'\r\n\r\nconst Temp = () => {\r\n    const [SearchValue, setSearchValue] = React.useState(\"Varanasi\")\r\n    const [Tempinfo, setTempinfo] = React.useState({})\r\n    \r\n\r\n    const getWeatherInfo = async () => {\r\n        try {\r\n            let url = `https://api.openweathermap.org/data/2.5/weather?q=${SearchValue}&units=metric&appid=6a8489f725255f4116902ec82e348f68`;\r\n            const res = await fetch(url); {/* returns promise means data will be fulfilled or rejected */ }\r\n            const data = await res.json()\r\n            const { temp, humidity, pressure } = data.main;\r\n            const { main: weathermood } = data.weather[0]\r\n            const { name } = data;\r\n            const { speed } = data.wind;\r\n            const { country, sunset } = data.sys\r\n            const myNewWeatherInfo = {\r\n                temp,\r\n                humidity,\r\n                pressure,\r\n                weathermood,\r\n                name,\r\n                speed,\r\n                country,\r\n                sunset,\r\n\r\n\r\n\r\n            }\r\n            setTempinfo(myNewWeatherInfo)\r\n\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getWeatherInfo(); {/* its for the very first time set to varanasi get called referenced to onClick={getWeatherInfo} */ }\r\n    }, [])\r\n    return (\r\n        <>\r\n            <div className=\"wrap\">\r\n                <div className=\"search\">\r\n                    <input type=\"search\"\r\n                        placeholder=\"Search\"\r\n                        autoFocus\r\n                        id=\"search\"\r\n                        className=\"searchTerm\"\r\n\r\n                        // data for what user typing \r\n                        value={SearchValue}\r\n                        onChange={(e) => setSearchValue(e.target.value)} />                                           {/*it rquires some state value */}\r\n\r\n\r\n\r\n                    <button className=\"searchButton\" type=\"button\" onClick={getWeatherInfo}>Search</button>\r\n\r\n\r\n                </div>\r\n            </div>\r\n             {/* temp card  */}\r\n\r\n             <Weathercard {...Tempinfo}/>\r\n\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Temp\r\n","// React Basics\n// // import React from 'react'\n\n// const App = () => {\n//   return (\n//     <>\n//       <h1 className=\"myclassname\">Hello Swat in the react world </h1>\n//       <MyName />\n//     </>\n//   );\n// };\n\n// const MyName = () => {\n//   return (\n//     <>\n    \n//     <h1>Swat means Swatantra</h1>\n//     </>\n//   )\n// }\n\n\n// export default App;\n\n\n\n// const App = () => {\n//   return (\n//     \"div\";                                                          complex way of adding div in arrow function but react is watching like this\n//     {};\n//     React.createElement(\"h1\",{} , \"Hello world\");                    \n//   )\n// };\nimport React from 'react'\n// import RestaurantMenu from './component/Basics/RestaurantMenu'      \n// import UseState from './component/Hooks/usestate' \n// import UseEffect from './component/Hooks/useeffect' \n// import UseReducer from './component/Hooks/usereducer'   \n// import TodoList from './component/Todo Project/todo' \nimport Temp from './component/Weather Forecast/temp'\n\n\nconst App = () => {\n  return (\n    <div>\n      <Temp/>\n\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}